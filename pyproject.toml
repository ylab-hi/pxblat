[tool.poetry]
name = "pxblat"
version = "1.2.1"
description = "A native python binding for blat suite"
authors = ["Yangyang Li <yangyang.li@northwestern.edu>"]
homepage = "https://github.com/ylab-hi/pxblat"
documentation = "https://pxblat.readthedocs.io/en/latest/"
repository = "https://github.com/ylab-hi/pxblat"
readme = "README.md"
license = "LICENSE"
classifiers = [
  "Development Status :: 6 - Mature",
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS :: MacOS X",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: C",
  "Programming Language :: C++",
]
keywords = ["bioinformatics", "sequence aligner", "blat"]

[tool.poetry.dependencies]
python = "^3.9, <3.12"
loguru = "^0.7.0"
pybind11 = "^2.10.4"
setuptools = ">=68.2.2,<76.0.0"
rich = "^13.3.5"
pysimdjson = ">=5.0.2,<7.0.0"
biopython = "^1.81"
deprecated = "^1.2.13"
mashumaro = "~3.8.1"
typing-extensions = "^4.0.0"
urllib3 = "2.3.0"
typer = ">=0.9,<0.16"


[tool.poetry.group.dev.dependencies]
pytest = ">=7.3.1,<9.0.0"
pytest-sugar = ">=0.9.7,<1.1.0"
pybind11-stubgen = ">=0.13,<2.6"
invoke = "^2.1.2"
ipdb = "^0.13.13"
pytest-ordering = "^0.6"
pytest-xdist = "^3.3.1"
scienceplots = "^2.0.1"
tikzplotlib = "^0.10.1"
nox = ">=2023.4.22,<2025.0.0"
nox-poetry = "^1.0.2"
codecov = "^2.1.13"
myst-parser = ">=1,<4"
sphinx-immaterial = { extras = [
  "clang-format",
  "cpp",
  "json",
  "keys",
], version = "^0.11.11" }
linkify-it-py = "^2.0.2"
sphinx-copybutton = "^0.5.2"
sphinx-togglebutton = "^0.3.2"
sphinxcontrib-bibtex = "^2.5.0"
sphinx-autoapi = ">=2.1,<4.0"
sphinx-autodoc2 = ">=0.4.2,<0.6.0"
psutil = ">=5.9.5,<7.0.0"
seaborn = ">=0.12.2,<0.14.0"
mypy = "^1.4.1"
sphinx-click = ">=4.4,<7.0"
py-spy = ">=0.3.14,<0.5.0"
sphinx-autobuild = ">=2021.3.14,<2025.0.0"
cibuildwheel = "^2.16.2"
ruff = ">=0.5.0,<0.9.0"
delocate = ">=0.10.4,<0.13.0"


[tool.poetry.scripts]
pxblat = "pxblat.cli.cli:app"

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.8"

[tool.ruff]
target-version = "py38"
line-length = 120
fix = true
lint.fixable = ["ALL"]
lint.select = [
  "ANN",
  "D",
  "A",
  "F",
  "E",
  "W",
  "C90",
  "I",
  "UP",
  "N",
  "YTT",
  "TID",
  "S",
  "BLE",
  "FBT",
  "PLR",
  "B",
  "B9",
  "A",
  "C4",
  "T10",
  "EM",
  "ICN",
  "T20",
  "Q",
  "RET",
  "SIM",
  "ARG",
  "DTZ",
  "ERA",
  "PD",
  "PGH",
  "PLC",
  "PLE",
  "PLW",
  "RUF",
  "PL",
  "TD",
  "FIX",
  "PTH",
  "TCH",
  "SLOT",
  "PT",
  "PYI",
  "PIE",
  "ISC",
  "FA",
  "EXE",
  # "CPY",
  "COM",
]
lint.ignore = [
  "E501",
  "D203",
  "D100",
  "D401",
  "ANN001",
  "ANN002",
  "ANN003",
  "ANN201",
  "ANN202",
  "ANN204",
  "ANN205",
  "ANN206",
  "PGH003",
  "N802",
  "N803",
  "N806",
  "N815",
  "EM101",
  # formater conflict
  'COM812',
  'COM819',
  'D206',
  'ISC001',
  'Q000',
  'Q001',
  'Q002',
  'Q003',
  'W191',
]
exclude = [
  "src/pxblat/extc/__init__.pyi",
  "src/pxblat/__init__.py",
  "tasks.py",
  "tests/*",
  "build.py",
  "scripts/*",
  "noxfile.py",
  "docs/conf.py",
  "setup.py",

  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "figures",

]


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
# magic-trailing-comma = "respect"
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["chr", "typer.Argument", "typer.Option"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.per-file-ignores]
"src/pxblat/cli/twobit2fa.py" = ["B008", "PLR0913", "FBT001", "FBT003"]
"src/pxblat/extc/__init__.py" = ["F405", "F403", "D104", "D103", "TID252"]
"src/pxblat/server/basic.py" = ["PLR0913"]
"src/pxblat/server/server.py" = ["PLR0913", "D102"]
"src/pxblat/server/client.py" = ["PLR0913"]
"src/pxblat/cli/server.py" = ["PLR0913", "N816", "FBT001", "FBT003"]
"src/pxblat/cli/client.py" = ["B008", "PLR0913", "FBT001", "FBT003"]
"src/pxblat/cli/fa2twobit.py" = ["B008", "PLR0913", "FBT001", "FBT003", "FA100"]
"src/pxblat/cli/cli.py" = ["DTZ005"]
"src/pxblat/toolkit/__init__.py" = ["PLR0913"]
"src/pxblat/parser.py" = ["A001", "A002", "ARG001"]
"docs/tutorial_data/query_context.py" = ["T201", "D103"]
"docs/tutorial_data/2bit.py" = ["T201", "D103"]
"docs/tutorial_data/query_general.py" = ["T201", "D103"]
"docs/tutorial_data/query_result.py" = ["T201", "D103"]
"docs/tutorial_data/blat.py" = ["T201", "D103"]

[tool.ruff.lint.pydocstyle]
convention = 'google'

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["pxblat"]
omit = ["tests/*"]

[tool.coverage.report]
show_missing = true
fail_under = 40
ignore_errors = true

[tool.mypy]
strict = false
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true

[tool.pytest.ini_options]
markers = [
  "smoke: a quick smoke test",
  "failing: failing tests",
  "imports: importing tests",
]

[tool.codespell]
skip = 'poetry.lock,'

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_type = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true

[tool.cibuildwheel.linux]
before-all = "yum install -y openssl-devel"
test-requires = "pytest"
test-command = "pytest {project}/tests -vls -m imports"

[tool.cibuildwheel.macos]
test-requires = "pytest"
test-command = "pytest {project}/tests -vls -m imports"


[tool.poetry.build]
script = "build.py"
generate-setup-file = true

[build-system]
requires = ["pybind11>2.9.1", "poetry-core>=1.2.0", "setuptools>=40.8.0"]
build-backend = "poetry.core.masonry.api"
